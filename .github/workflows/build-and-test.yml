name: build-and-test

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    branches:
      - main
      - release/**
    paths:
      - '**.yml'
      - '**.cs'
      - '**.csproj'
env:
  STEP_TIMEOUT_MINUTES: 60

jobs:
  build-and-test:
    name: build-and-test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      id-token: write
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"
        with:
          target-platform: linux

        
      - name: Restore dependencies
        run: dotnet restore --ignore-failed-sources

      - name: Test
        run: find . -name '*[Uu]nit[Tt]ests.csproj' -exec dotnet test --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage" --results-directory coverage --configuration Release \;
  
      - name: Test Report
        uses: dorny/test-reporter@v1
        with:
          name: unit-tests
          path: "**/test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true
      
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage/*/coverage.cobertura.xml'
          badge: true
          format: 'markdown'
          output: 'both'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
